@model SIMailer.Models.ModelClasses.Mails
@{
    ViewBag.Title = "CreateMail";
}
<link href="~/stylesheet.css" rel="stylesheet" />
<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
<!-- jQuery library -->
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<!-- Latest compiled JavaScript -->
<script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
<script src="@Url.Content("~/scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<link href="~/stylesheet.css" rel="stylesheet" />
<ol class="breadcrumb">

    @if (ViewContext.RouteData.Values["controller"].ToString() != "Home")
    {
        @Html.ActionLink("Home", "Home")
        <li class="active">
            / @ViewBag.Title
        </li>
    }
    else
    {
        <li class="active">
            Home
        </li>
    }
</ol>

<div>
    <center><h4><span class="custom-heading"><u>Create Mail</u></span></h4></center>
</div>

@using (Html.BeginForm("CreateMail", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="container">
        <div style="float:left">
            @Html.DropDownListFor(Model => Model.CategoryId, new SelectList(ViewBag.dataMailCategory, "Id", "Category"), "Select Category", new { id = "DDLCategory", onchange = "enableTextbox()", @style = "width:100%;height:27px;" })
            @Html.ValidationMessageFor(Model => Model.CategoryId, "", new { @class = "text-danger" })
        </div>
        <div style="float:left; padding-left:15px">
            <strong>OR</strong>
        </div>
        <div style="float:left; padding-left:15px">
            <input type="text" name="mailCategories.Category" id="newcategorytxtbx" placeholder="Add new category" disabled="disabled" />
        </div>
        <br />
        <br />

        @*Send To Modal Button Start*@
        <div>
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target=".bd-example-modal-lg">Add Recipients</button>
        </div>
        @*Send To Modal Button End*@
        @Html.HiddenFor(Model => Model.Id)
        <div style="padding-top:20px">
            @Html.EditorFor(Model => Model.Title, new { htmlAttributes = new { placeholder = "Title" } })
            @Html.ValidationMessageFor(Model => Model.Title, "", new { @class = "text-danger" })
        </div>
        <div style="padding-top:20px">
            @Html.EditorFor(Model => Model.Subject, new { htmlAttributes = new { placeholder = "Subject" } })
            @Html.ValidationMessageFor(Model => Model.Subject, "", new { @class = "text-danger" })
        </div>
        <div style="padding-top:20px">
            @Html.TextAreaFor(Model => Model.Body, new { placeholder = "Body", style = "width: 1000px; height: 100px;" })
            @Html.ValidationMessageFor(Model => Model.Body, "", new { @class = "text-danger" })
        </div>
        <div style="padding-top:20px">
            <input type="submit" value="Send" class="btn btn-primary btn-md custom-btn" />
        </div>
        @*Send To Modal Start*@
        <div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h4 class="modal-title" id="myModalLabel">Sent to...</h4>
                    </div>
                    <div class="modal-body">
                        <div class="col">
                            <div class="container" style="width:auto">
                                @if (ViewBag.dataPersonType != null || ViewBag.dataPersonType.Count == 0)
                                {
                                    for (int i = 0; i < ViewBag.dataPersonType.Count; i++)
                                    {

                                        <div class="col-sm-@ViewBag.dataPersonType.Count">
                                            <div class="panel panel-default">
                                                <input type="checkbox" id="Name@(ViewBag.dataPersonType[i].Id)" class="parent name-person-type" />
                                                <a class="list-group-item" data-toggle="collapse" href="#collapsePersonType@(i)">
                                                    @ViewBag.dataPersonType[i].Name
                                                </a>
                                                <div class="panel-collapse collapse" id="collapsePersonType@(i)">
                                                    <div class="panel-body">
                                                        @for (int j = 0; j < ViewBag.dataPerson.Count; j++)
                                                        {
                                                            if (ViewBag.dataPerson[j].TypeId == ViewBag.dataPersonType[i].Id)
                                                            {
                                                                @Html.HiddenFor(Model => Model.persons[j].Id, new { Value = ViewBag.dataPerson[j].Id })
                                                                @Html.HiddenFor(Model => Model.persons[j].EmailId, new { Value = ViewBag.dataPerson[j].EmailId })
                                                                @Html.HiddenFor(Model => Model.persons[j].Name, new { Value = ViewBag.dataPerson[j].Name })
                                                                @Html.HiddenFor(Model => Model.persons[j].TypeId, new { Value = ViewBag.dataPerson[j].TypeId })
                                                                @Html.CheckBoxFor(Model => Model.persons[j].isIncluded, new { id = "Name"+ ViewBag.dataPersonType[i].Id + "-"+ViewBag.dataPerson[j].Id, @class = "name-person" })
                                                                @ViewBag.dataPerson[j].Name
                                                            }
                                                        }

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Add</button>
                    </div>
                </div>
            </div>
        </div>
        @*Send To Modal End*@
    </div>
}

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script type="text/javascript">
    function enableTextbox() {
        if (document.getElementById("DDLCategory").value == "0") {
            document.getElementById("newcategorytxtbx").disabled = false;
        }
        else {
            document.getElementById("newcategorytxtbx").disabled = true;
        }
    }
</script>
<script>
    (function () {
        $('.name-person-type').change(function () {
            if ($(this).prop("checked") == true){
                $(this).siblings("div").find(".name-person").prop("checked", true);
            }
            else {
                $(this).siblings("div").find(".name-person").prop("checked", false);
            }
        });
        $('.name-person').change(function () {
            if ($(this).prop("checked") == false) {
                $(this).parent().parent().siblings(".name-person-type").prop("checked", false);
            }
            else {
                if ($(this).siblings(".name-person:checked").length == $(this).siblings(".name-person").length) {
                    $(this).parent().parent().siblings(".name-person-type").prop("checked", true);
                }
            }
        });
    }())
</script>
